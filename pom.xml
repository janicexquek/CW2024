<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.example</groupId>
  <artifactId>CW2024</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>demo</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <junit.version>5.9.2</junit.version>
    <testfx.version>4.0.16-alpha</testfx.version>
    <javafx.version>19.0.2</javafx.version>
    <maven.compiler.source>19</maven.compiler.source>
    <maven.compiler.target>19</maven.compiler.target>
  </properties>

  <dependencies>
    <!-- JavaFX Dependencies -->
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-media</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-swing</artifactId>
      <version>${javafx.version}</version> <!-- Updated to use ${javafx.version} -->
    </dependency>

    <!-- JUnit 5 Dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- TestFX Dependencies -->
    <dependency>
      <groupId>org.testfx</groupId>
      <artifactId>testfx-junit5</artifactId>
      <version>${testfx.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testfx</groupId>
      <artifactId>testfx-core</artifactId>
      <version>${testfx.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Mockito for Mocking -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>5.5.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>5.5.0</version>
      <scope>test</scope>
    </dependency>

    <!-- API Guardian (Required for JUnit) -->
    <dependency>
      <groupId>org.apiguardian</groupId>
      <artifactId>apiguardian-api</artifactId>
      <version>1.1.2</version>
      <scope>compile</scope> <!-- Retained only with compile scope -->
    </dependency>
  </dependencies>



  <build>
    <plugins>
      <!-- Maven Javadoc Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.4.1</version> <!-- Latest stable version -->
        <configuration>
          <source>${maven.compiler.source}</source>
          <additionalOptions>
            --add-modules=javafx.controls,javafx.fxml,javafx.media,javafx.graphics,java.prefs,org.junit.jupiter.api,org.testfx.junit5,org.testfx.core
          </additionalOptions>
        </configuration>
      </plugin>

      <!-- Maven Compiler Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
        </configuration>
      </plugin>

      <!-- JavaFX Maven Plugin -->
      <plugin>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-maven-plugin</artifactId>
        <version>0.0.8</version>
        <executions>
          <execution>
            <!-- Default configuration for running with: mvn clean javafx:run -->
            <id>default-cli</id>
            <configuration>
              <mainClass>com.example.demo.controller.Main</mainClass>
              <jvmArgs>
                --add-exports=javafx.base/com.sun.javafx=javafx.media
                --add-opens=javafx.media/javafx.scene.media=ALL-UNNAMED
              </jvmArgs>
              <launcher>app</launcher>
              <jlinkZipName>app</jlinkZipName>
              <jlinkImageName>app</jlinkImageName>
              <noManPages>true</noManPages>
              <stripDebug>true</stripDebug>
              <noHeaderFiles>true</noHeaderFiles>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Maven Surefire Plugin for Testing -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0</version> <!-- Updated to stable version -->
        <configuration>
          <useModulePath>true</useModulePath> <!-- Changed to true for module support -->
          <argLine>
            --add-exports=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
            --add-exports=javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED
            --add-exports=javafx.graphics/com.sun.javafx.util=ALL-UNNAMED
            --add-opens=javafx.graphics/javafx.stage=ALL-UNNAMED
          </argLine>
          <systemPropertyVariables>
            <java.awt.headless>true</java.awt.headless>
            <testfx.robot>glass</testfx.robot>
          </systemPropertyVariables>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>